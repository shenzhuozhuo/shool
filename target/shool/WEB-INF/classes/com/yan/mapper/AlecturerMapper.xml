<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yan.mapper.AlecturerMapper">
  <resultMap id="BaseResultMap" type="com.yan.entity.Alecturer">
    <id column="aid" jdbcType="INTEGER" property="aid" />
    <result column="aName" jdbcType="VARCHAR" property="aname" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="date" jdbcType="DATE" property="date" />
    <collection property="ac" ofType="Ac">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="cid" jdbcType="INTEGER" property="cid" />
      <result column="clid" jdbcType="INTEGER" property="clid" />
      <result column="aid" jdbcType="INTEGER" property="aid" />
      <association property="aClass" javaType="Class">
        <id column="cid" jdbcType="INTEGER" property="cid" />
        <result column="classNname" jdbcType="VARCHAR" property="classnname" />
        <result column="classData" jdbcType="DATE" property="classdata" />
      </association>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    aid, aName, sex, age, date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from alecturer
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from alecturer
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yan.entity.Alecturer">
    insert into alecturer (aid, aName, sex, 
      age, date)
    values (#{aid,jdbcType=INTEGER}, #{aname,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{date,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.entity.Alecturer">
    insert into alecturer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        aid,
      </if>
      <if test="aname != null">
        aName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="date != null">
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="aname != null">
        #{aname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yan.entity.Alecturer">
    update alecturer
    <set>
      <if test="aname != null">
        aName = #{aname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yan.entity.Alecturer">
    update alecturer
    set aName = #{aname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <select id="selectAle" resultMap="BaseResultMap">
    SELECT a.aName,a.age,a.sex,a.date,c.classNname FROM  alecturer AS a
    LEFT JOIN ac AS ac ON a.aid=ac.aid
    LEFT JOIN class AS c ON ac.cid = c.cid
  </select>
</mapper>